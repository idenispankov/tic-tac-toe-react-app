{"version":3,"sources":["index.js"],"names":["Square","props","className","onClick","value","Board","renderSquare","i","squares","Game","state","history","Array","fill","stepNumber","xIsNext","this","slice","length","calculateWinner","setState","concat","step","status","current","winner","moves","map","move","desc","jumpTo","handleClick","React","Component","lines","a","b","c","ReactDOM","render","document","getElementById"],"mappings":"sPAIA,SAASA,EAAOC,GACd,OACE,wBAAQC,UAAU,SAASC,QAASF,EAAME,QAA1C,SACGF,EAAMG,QAKb,SAASC,EAAMJ,GACb,SAASK,EAAaC,GACpB,OAAO,cAACP,EAAD,CAAQI,MAAOH,EAAMO,QAAQD,GAAIJ,QAAS,kBAAMF,EAAME,QAAQI,MAGvE,OACE,gCACE,sBAAKL,UAAU,YAAf,UACGI,EAAa,GACbA,EAAa,GACbA,EAAa,MAEhB,sBAAKJ,UAAU,YAAf,UACGI,EAAa,GACbA,EAAa,GACbA,EAAa,MAEhB,sBAAKJ,UAAU,YAAf,UACGI,EAAa,GACbA,EAAa,GACbA,EAAa,S,IAMhBG,E,kDACJ,WAAYR,GAAQ,IAAD,8BACjB,cAAMA,IACDS,MAAQ,CACXC,QAAS,CACP,CACEH,QAASI,MAAM,GAAGC,KAAK,QAG3BC,WAAY,EACZC,SAAS,GATM,E,+CAanB,SAAYR,GACV,IAAMI,EAAUK,KAAKN,MAAMC,QAAQM,MAAM,EAAGD,KAAKN,MAAMI,WAAa,GAE9DN,EADUG,EAAQA,EAAQO,OAAS,GACjBV,QAAQS,QAC5BE,EAAgBX,IAAYA,EAAQD,KAGxCC,EAAQD,GAAKS,KAAKN,MAAMK,QAAU,IAAM,IACxCC,KAAKI,SAAS,CACZT,QAASA,EAAQU,OAAO,CACtB,CACEb,QAASA,KAGbM,WAAYH,EAAQO,OACpBH,SAAUC,KAAKN,MAAMK,a,oBAIzB,SAAOO,GACLN,KAAKI,SAAS,CACZN,WAAYQ,EACZP,QAASO,EAAO,IAAM,M,oBAI1B,WAAU,IAcJC,EAdG,OACDZ,EAAUK,KAAKN,MAAMC,QACrBa,EAAUb,EAAQK,KAAKN,MAAMI,YAC7BW,EAASN,EAAgBK,EAAQhB,SAEjCkB,EAAQf,EAAQgB,KAAI,SAACL,EAAMM,GAC/B,IAAMC,EAAOD,EAAO,eAAiBA,EAAO,mBAC5C,OACE,6BACE,wBAAQzB,QAAS,kBAAM,EAAK2B,OAAOF,IAAnC,SAA2CC,KADpCD,MAab,OALEL,EADEE,EACO,WAAaA,EAEb,iBAAmBT,KAAKN,MAAMK,QAAU,IAAM,KAIvD,sBAAKb,UAAU,OAAf,UACE,qBAAKA,UAAU,aAAf,SACE,cAACG,EAAD,CACEG,QAASgB,EAAQhB,QACjBL,QAAS,SAACI,GAAD,OAAO,EAAKwB,YAAYxB,QAGrC,sBAAKL,UAAU,YAAf,UACE,qBAAKA,UAAU,SAAf,SAAyBqB,IACzB,6BAAKG,c,GAvEIM,IAAMC,WAkFzB,SAASd,EAAgBX,GAWvB,IAVA,IAAM0B,EAAQ,CACZ,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,IAEA3B,EAAI,EAAGA,EAAI2B,EAAMhB,OAAQX,IAAK,CAAC,IAAD,cACnB2B,EAAM3B,GADa,GAC9B4B,EAD8B,KAC3BC,EAD2B,KACxBC,EADwB,KAErC,GAAI7B,EAAQ2B,IAAM3B,EAAQ2B,KAAO3B,EAAQ4B,IAAM5B,EAAQ2B,KAAO3B,EAAQ6B,GACpE,OAAO7B,EAAQ2B,GAGnB,OAAO,KAnBTG,IAASC,OAAO,cAAC9B,EAAD,IAAU+B,SAASC,eAAe,W","file":"static/js/main.b3d72f3a.chunk.js","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nfunction Square(props) {\n  return (\n    <button className='square' onClick={props.onClick}>\n      {props.value}\n    </button>\n  );\n}\n\nfunction Board(props) {\n  function renderSquare(i) {\n    return <Square value={props.squares[i]} onClick={() => props.onClick(i)} />;\n  }\n\n  return (\n    <div>\n      <div className='board-row'>\n        {renderSquare(0)}\n        {renderSquare(1)}\n        {renderSquare(2)}\n      </div>\n      <div className='board-row'>\n        {renderSquare(3)}\n        {renderSquare(4)}\n        {renderSquare(5)}\n      </div>\n      <div className='board-row'>\n        {renderSquare(6)}\n        {renderSquare(7)}\n        {renderSquare(8)}\n      </div>\n    </div>\n  );\n}\n\nclass Game extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      history: [\n        {\n          squares: Array(9).fill(null),\n        },\n      ],\n      stepNumber: 0,\n      xIsNext: true,\n    };\n  }\n\n  handleClick(i) {\n    const history = this.state.history.slice(0, this.state.stepNumber + 1);\n    const current = history[history.length - 1];\n    const squares = current.squares.slice();\n    if (calculateWinner(squares) || squares[i]) {\n      return;\n    }\n    squares[i] = this.state.xIsNext ? 'X' : 'O';\n    this.setState({\n      history: history.concat([\n        {\n          squares: squares,\n        },\n      ]),\n      stepNumber: history.length,\n      xIsNext: !this.state.xIsNext,\n    });\n  }\n\n  jumpTo(step) {\n    this.setState({\n      stepNumber: step,\n      xIsNext: step % 2 === 0,\n    });\n  }\n\n  render() {\n    const history = this.state.history;\n    const current = history[this.state.stepNumber];\n    const winner = calculateWinner(current.squares);\n\n    const moves = history.map((step, move) => {\n      const desc = move ? 'Go to move #' + move : 'Go to game start';\n      return (\n        <li key={move}>\n          <button onClick={() => this.jumpTo(move)}>{desc}</button>\n        </li>\n      );\n    });\n\n    let status;\n    if (winner) {\n      status = 'Winner: ' + winner;\n    } else {\n      status = 'Next player: ' + (this.state.xIsNext ? 'X' : 'O');\n    }\n\n    return (\n      <div className='game'>\n        <div className='game-board'>\n          <Board\n            squares={current.squares}\n            onClick={(i) => this.handleClick(i)}\n          />\n        </div>\n        <div className='game-info'>\n          <div className='status'>{status}</div>\n          <ol>{moves}</ol>\n        </div>\n      </div>\n    );\n  }\n}\n\n// ========================================\n\nReactDOM.render(<Game />, document.getElementById('root'));\n\nfunction calculateWinner(squares) {\n  const lines = [\n    [0, 1, 2],\n    [3, 4, 5],\n    [6, 7, 8],\n    [0, 3, 6],\n    [1, 4, 7],\n    [2, 5, 8],\n    [0, 4, 8],\n    [2, 4, 6],\n  ];\n  for (let i = 0; i < lines.length; i++) {\n    const [a, b, c] = lines[i];\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n      return squares[a];\n    }\n  }\n  return null;\n}\n"],"sourceRoot":""}